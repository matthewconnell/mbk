{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "files = [\"adolescent-births-2016\", \n",
    "\"birth-rates-for-young-adult-women-2016\",\n",
    "\"child-housing-problems-2016\",\n",
    "\"child-living-arrangements-2016\",\n",
    "\"child-maltreatment-2016\",\n",
    "\"child-poverty-percent-2016\",\n",
    "\"exposure-to-violence-among-children-2016\",\n",
    "\"naep04-reading-2016\",\n",
    "\"young-adult-living-arrangements-2016\"]\n",
    "\n",
    "CSVs = []\n",
    "\n",
    "for file in files:\n",
    "    string_name = file + \".csv\"\n",
    "    csv = pd.read_csv(string_name, encoding = 'cp437')\n",
    "    csv = csv.replace('รป', '-', regex=True)  # Some CSVs have encoding issue where '-' is encoded as 'รป'\n",
    "    csv[\"Notes\"] = 0   # Add 'Notes' column if it does not exist\n",
    "    csv[\"Note\"] = 0 # Add 'Note' column if it does not exist\n",
    "    csv = csv.drop(columns = [\"Notes\", \"Note\"])  # Drop Notes column\n",
    "    #csv = csv.dropna()   # Drop rows with NAs\n",
    "    CSVs.append(csv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "adolesent_births = CSVs[0].rename(columns={\"Percentage\":\"Rate (per 1,000 Females)\"}\n",
    "              ).drop(columns = \"Characteristic\"\n",
    "                    ).dropna()\n",
    "\n",
    "young_woman_births = CSVs[1].drop(columns=\"Characteristic\").dropna()\n",
    "\n",
    "child_housing_problems = CSVs[2]\n",
    "\n",
    "child_living_arrangements = CSVs[3].drop(columns=\"Characteristic\").dropna()\n",
    "\n",
    "child_maltreatment = CSVs[4].drop(columns = [\"Characteristic\", \"Race/ethnicity\"]).dropna()\n",
    "\n",
    "child_poverty_percent = CSVs[5].drop(columns=[\"Characteristic\", \"Note on Percent\"]).dropna()\n",
    "\n",
    "exposure_to_violent_crime = CSVs[6].drop(columns=[\"Characteristic\", \"Note on Percent\", \"Note on Count\"]).dropna()\n",
    "\n",
    "reading_scores = CSVs[7].drop(columns=\"Characteristic\").dropna()\n",
    "\n",
    "young_adult_living_arrangements = CSVs[8].drop(columns=\"Characteristic\").dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Add column to be consistent with 'young_woman_births' df\n",
    "adolesent_births[\"Age\"] = \"Ages 15-17\"\n",
    "#adolesent_births"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "#young_woman_births\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.set_option('display.max_rows', 100)\n",
    "#child_housing_problems"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "test = \"Total - Hispanic, With severe housing problems\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Total - Hispanic', ' With severe housing problems']"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.split(sep = \",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [],
   "source": [
    "child_housing_problems[\"Characteristic\"] = child_housing_problems[\"Characteristic\"].str.replace(\"Total - \", \"\")\n",
    "#child_housing_problems"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split the character column by racial category and housing variable\n",
    "child_housing_problems[\"Characteristic\"].str.rsplit(\", \", expand=True, n=1)\n",
    "\n",
    "# Set the housing variable as a column in the df\n",
    "child_housing_problems[\"housing_situation\"] = child_housing_problems[\"Characteristic\"].str.rsplit(\", \", expand=True, n=1)[1]\n",
    "\n",
    "# Set the characteristic column to be consistent with the other dataframes\n",
    "child_housing_problems[\"characteristic\"] = child_housing_problems[\"Characteristic\"].str.rsplit(\", \", expand=True, n=1)[0]\n",
    "\n",
    "# Drop the old Characteristic column\n",
    "child_housing_problems = child_housing_problems.drop(columns = [\"Characteristic\"])\n",
    "\n",
    "# child_housing_problems"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TODO\n",
    "# How to aggregate this data so it's useful \n",
    "# child_maltreatment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Race/ethnicity</th>\n",
       "      <th>Year</th>\n",
       "      <th>Standard Error on Percentage</th>\n",
       "      <th>percent_living_in_poverty</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-17</td>\n",
       "      <td>White alone, non-Hispanic</td>\n",
       "      <td>2002</td>\n",
       "      <td>0.5</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-17</td>\n",
       "      <td>White alone, non-Hispanic</td>\n",
       "      <td>2003</td>\n",
       "      <td>0.5</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-17</td>\n",
       "      <td>White alone, non-Hispanic</td>\n",
       "      <td>2004</td>\n",
       "      <td>0.5</td>\n",
       "      <td>10.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>269</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-17</td>\n",
       "      <td>White alone, non-Hispanic</td>\n",
       "      <td>2005</td>\n",
       "      <td>0.5</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-17</td>\n",
       "      <td>White alone, non-Hispanic</td>\n",
       "      <td>2006</td>\n",
       "      <td>0.5</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>751</th>\n",
       "      <td>Female</td>\n",
       "      <td>6-17</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.5</td>\n",
       "      <td>34.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>752</th>\n",
       "      <td>Female</td>\n",
       "      <td>6-17</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>2012</td>\n",
       "      <td>1.4</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753</th>\n",
       "      <td>Female</td>\n",
       "      <td>6-17</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.5</td>\n",
       "      <td>28.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>754</th>\n",
       "      <td>Female</td>\n",
       "      <td>6-17</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.6</td>\n",
       "      <td>32.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>Female</td>\n",
       "      <td>6-17</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>2014</td>\n",
       "      <td>1.5</td>\n",
       "      <td>29.9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>420 rows ร 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Sex    Age             Race/ethnicity  Year  \\\n",
       "266    Male   0-17  White alone, non-Hispanic  2002   \n",
       "267    Male   0-17  White alone, non-Hispanic  2003   \n",
       "268    Male   0-17  White alone, non-Hispanic  2004   \n",
       "269    Male   0-17  White alone, non-Hispanic  2005   \n",
       "270    Male   0-17  White alone, non-Hispanic  2006   \n",
       "..      ...    ...                        ...   ...   \n",
       "751  Female   6-17                   Hispanic  2011   \n",
       "752  Female   6-17                   Hispanic  2012   \n",
       "753  Female   6-17                   Hispanic  2013   \n",
       "754  Female   6-17                   Hispanic  2013   \n",
       "755  Female   6-17                   Hispanic  2014   \n",
       "\n",
       "     Standard Error on Percentage  percent_living_in_poverty  \n",
       "266                           0.5                        9.5  \n",
       "267                           0.5                       10.0  \n",
       "268                           0.5                       10.4  \n",
       "269                           0.5                        9.8  \n",
       "270                           0.5                        9.8  \n",
       "..                            ...                        ...  \n",
       "751                           1.5                       34.4  \n",
       "752                           1.4                       33.0  \n",
       "753                           1.5                       28.8  \n",
       "754                           1.6                       32.6  \n",
       "755                           1.5                       29.9  \n",
       "\n",
       "[420 rows x 6 columns]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.set_option('display.max_rows', 100)\n",
    "child_poverty_percent['percent_living_in_poverty'] = child_poverty_percent['Percentage']\n",
    "child_poverty_percent = child_poverty_percent.drop(columns = \"Percentage\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
